// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.2
// source: swupdate.proto

package swupdatesvc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{0}
}

type GetAvailableUpdateBundlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateUrl string `protobuf:"bytes,1,opt,name=updateUrl,proto3" json:"updateUrl,omitempty"`
}

func (x *GetAvailableUpdateBundlesRequest) Reset() {
	*x = GetAvailableUpdateBundlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableUpdateBundlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableUpdateBundlesRequest) ProtoMessage() {}

func (x *GetAvailableUpdateBundlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableUpdateBundlesRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableUpdateBundlesRequest) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{1}
}

func (x *GetAvailableUpdateBundlesRequest) GetUpdateUrl() string {
	if x != nil {
		return x.UpdateUrl
	}
	return ""
}

type UpdateBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleUrl         string            `protobuf:"bytes,1,opt,name=bundleUrl,proto3" json:"bundleUrl,omitempty"`
	BundleVersion     string            `protobuf:"bytes,2,opt,name=bundleVersion,proto3" json:"bundleVersion,omitempty"`
	ComponentVersions map[string]string `protobuf:"bytes,3,rep,name=componentVersions,proto3" json:"componentVersions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserData          map[string]string `protobuf:"bytes,4,rep,name=userData,proto3" json:"userData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateBundle) Reset() {
	*x = UpdateBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBundle) ProtoMessage() {}

func (x *UpdateBundle) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBundle.ProtoReflect.Descriptor instead.
func (*UpdateBundle) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateBundle) GetBundleUrl() string {
	if x != nil {
		return x.BundleUrl
	}
	return ""
}

func (x *UpdateBundle) GetBundleVersion() string {
	if x != nil {
		return x.BundleVersion
	}
	return ""
}

func (x *UpdateBundle) GetComponentVersions() map[string]string {
	if x != nil {
		return x.ComponentVersions
	}
	return nil
}

func (x *UpdateBundle) GetUserData() map[string]string {
	if x != nil {
		return x.UserData
	}
	return nil
}

type GetAvailableUpdateBundlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EngineVersion       string            `protobuf:"bytes,1,opt,name=engineVersion,proto3" json:"engineVersion,omitempty"`
	IsError             bool              `protobuf:"varint,2,opt,name=isError,proto3" json:"isError,omitempty"`
	Message             string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CurrentVersion      string            `protobuf:"bytes,4,opt,name=currentVersion,proto3" json:"currentVersion,omitempty"`
	InstalledComponents map[string]string `protobuf:"bytes,5,rep,name=installedComponents,proto3" json:"installedComponents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AvailableBundles    []*UpdateBundle   `protobuf:"bytes,6,rep,name=availableBundles,proto3" json:"availableBundles,omitempty"`
}

func (x *GetAvailableUpdateBundlesResponse) Reset() {
	*x = GetAvailableUpdateBundlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableUpdateBundlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableUpdateBundlesResponse) ProtoMessage() {}

func (x *GetAvailableUpdateBundlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableUpdateBundlesResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableUpdateBundlesResponse) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{3}
}

func (x *GetAvailableUpdateBundlesResponse) GetEngineVersion() string {
	if x != nil {
		return x.EngineVersion
	}
	return ""
}

func (x *GetAvailableUpdateBundlesResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *GetAvailableUpdateBundlesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAvailableUpdateBundlesResponse) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *GetAvailableUpdateBundlesResponse) GetInstalledComponents() map[string]string {
	if x != nil {
		return x.InstalledComponents
	}
	return nil
}

func (x *GetAvailableUpdateBundlesResponse) GetAvailableBundles() []*UpdateBundle {
	if x != nil {
		return x.AvailableBundles
	}
	return nil
}

type InstallUpdateBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleUrl string `protobuf:"bytes,2,opt,name=bundleUrl,proto3" json:"bundleUrl,omitempty"`
}

func (x *InstallUpdateBundleRequest) Reset() {
	*x = InstallUpdateBundleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallUpdateBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallUpdateBundleRequest) ProtoMessage() {}

func (x *InstallUpdateBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallUpdateBundleRequest.ProtoReflect.Descriptor instead.
func (*InstallUpdateBundleRequest) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{4}
}

func (x *InstallUpdateBundleRequest) GetBundleUrl() string {
	if x != nil {
		return x.BundleUrl
	}
	return ""
}

type InstallUpdateBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress float32 `protobuf:"fixed32,1,opt,name=progress,proto3" json:"progress,omitempty"`
	IsDone   bool    `protobuf:"varint,2,opt,name=isDone,proto3" json:"isDone,omitempty"`
	IsError  bool    `protobuf:"varint,3,opt,name=isError,proto3" json:"isError,omitempty"`
	Messsage string  `protobuf:"bytes,4,opt,name=messsage,proto3" json:"messsage,omitempty"`
}

func (x *InstallUpdateBundleResponse) Reset() {
	*x = InstallUpdateBundleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallUpdateBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallUpdateBundleResponse) ProtoMessage() {}

func (x *InstallUpdateBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallUpdateBundleResponse.ProtoReflect.Descriptor instead.
func (*InstallUpdateBundleResponse) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{5}
}

func (x *InstallUpdateBundleResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *InstallUpdateBundleResponse) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *InstallUpdateBundleResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *InstallUpdateBundleResponse) GetMesssage() string {
	if x != nil {
		return x.Messsage
	}
	return ""
}

type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShouldRollback bool `protobuf:"varint,1,opt,name=shouldRollback,proto3" json:"shouldRollback,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{6}
}

func (x *GetStatusResponse) GetShouldRollback() bool {
	if x != nil {
		return x.ShouldRollback
	}
	return false
}

type RollbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsError bool   `protobuf:"varint,1,opt,name=isError,proto3" json:"isError,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RollbackResponse) Reset() {
	*x = RollbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackResponse) ProtoMessage() {}

func (x *RollbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackResponse.ProtoReflect.Descriptor instead.
func (*RollbackResponse) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{7}
}

func (x *RollbackResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *RollbackResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetClientInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source    string            `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	BootStrap string            `protobuf:"bytes,2,opt,name=bootStrap,proto3" json:"bootStrap,omitempty"`
	TmpDir    string            `protobuf:"bytes,3,opt,name=tmpDir,proto3" json:"tmpDir,omitempty"`
	Customer  string            `protobuf:"bytes,4,opt,name=customer,proto3" json:"customer,omitempty"`
	Product   string            `protobuf:"bytes,5,opt,name=product,proto3" json:"product,omitempty"`
	Infos     map[string]string `protobuf:"bytes,6,rep,name=infos,proto3" json:"infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetClientInformationResponse) Reset() {
	*x = GetClientInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swupdate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientInformationResponse) ProtoMessage() {}

func (x *GetClientInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swupdate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientInformationResponse.ProtoReflect.Descriptor instead.
func (*GetClientInformationResponse) Descriptor() ([]byte, []int) {
	return file_swupdate_proto_rawDescGZIP(), []int{8}
}

func (x *GetClientInformationResponse) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GetClientInformationResponse) GetBootStrap() string {
	if x != nil {
		return x.BootStrap
	}
	return ""
}

func (x *GetClientInformationResponse) GetTmpDir() string {
	if x != nil {
		return x.TmpDir
	}
	return ""
}

func (x *GetClientInformationResponse) GetCustomer() string {
	if x != nil {
		return x.Customer
	}
	return ""
}

func (x *GetClientInformationResponse) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *GetClientInformationResponse) GetInfos() map[string]string {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_swupdate_proto protoreflect.FileDescriptor

var file_swupdate_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x40, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xf4, 0x02, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x77, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x44, 0x0a, 0x16, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3b, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa9, 0x03, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x10,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x10,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x1a, 0x46, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x22, 0x87, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f,
	0x75, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x46, 0x0a, 0x10, 0x52,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x6f, 0x6f, 0x74, 0x53, 0x74, 0x72, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x6f, 0x6f, 0x74, 0x53, 0x74, 0x72, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6d,
	0x70, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6d, 0x70, 0x44,
	0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xe2, 0x03, 0x0a, 0x07,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x12, 0x76, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x66, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2c, 0x0a, 0x06, 0x52, 0x65, 0x62, 0x6f, 0x6f,
	0x74, 0x12, 0x0f, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0f, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x39, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x0f,
	0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1a, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x4b, 0x0a, 0x18, 0x64, 0x65, 0x2e, 0x69, 0x64, 0x61, 0x73, 0x74, 0x72, 0x6f, 0x65, 0x6d,
	0x2e, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x76, 0x63, 0x42, 0x0b, 0x53, 0x77,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x76, 0x63, 0x50, 0x01, 0x5a, 0x20, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x64, 0x61, 0x73, 0x74, 0x72, 0x6f, 0x65,
	0x6d, 0x2f, 0x73, 0x77, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x76, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_swupdate_proto_rawDescOnce sync.Once
	file_swupdate_proto_rawDescData = file_swupdate_proto_rawDesc
)

func file_swupdate_proto_rawDescGZIP() []byte {
	file_swupdate_proto_rawDescOnce.Do(func() {
		file_swupdate_proto_rawDescData = protoimpl.X.CompressGZIP(file_swupdate_proto_rawDescData)
	})
	return file_swupdate_proto_rawDescData
}

var file_swupdate_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_swupdate_proto_goTypes = []interface{}{
	(*Empty)(nil),                             // 0: swupdate.Empty
	(*GetAvailableUpdateBundlesRequest)(nil),  // 1: swupdate.GetAvailableUpdateBundlesRequest
	(*UpdateBundle)(nil),                      // 2: swupdate.UpdateBundle
	(*GetAvailableUpdateBundlesResponse)(nil), // 3: swupdate.GetAvailableUpdateBundlesResponse
	(*InstallUpdateBundleRequest)(nil),        // 4: swupdate.InstallUpdateBundleRequest
	(*InstallUpdateBundleResponse)(nil),       // 5: swupdate.InstallUpdateBundleResponse
	(*GetStatusResponse)(nil),                 // 6: swupdate.GetStatusResponse
	(*RollbackResponse)(nil),                  // 7: swupdate.RollbackResponse
	(*GetClientInformationResponse)(nil),      // 8: swupdate.GetClientInformationResponse
	nil,                                       // 9: swupdate.UpdateBundle.ComponentVersionsEntry
	nil,                                       // 10: swupdate.UpdateBundle.UserDataEntry
	nil,                                       // 11: swupdate.GetAvailableUpdateBundlesResponse.InstalledComponentsEntry
	nil,                                       // 12: swupdate.GetClientInformationResponse.InfosEntry
}
var file_swupdate_proto_depIdxs = []int32{
	9,  // 0: swupdate.UpdateBundle.componentVersions:type_name -> swupdate.UpdateBundle.ComponentVersionsEntry
	10, // 1: swupdate.UpdateBundle.userData:type_name -> swupdate.UpdateBundle.UserDataEntry
	11, // 2: swupdate.GetAvailableUpdateBundlesResponse.installedComponents:type_name -> swupdate.GetAvailableUpdateBundlesResponse.InstalledComponentsEntry
	2,  // 3: swupdate.GetAvailableUpdateBundlesResponse.availableBundles:type_name -> swupdate.UpdateBundle
	12, // 4: swupdate.GetClientInformationResponse.infos:type_name -> swupdate.GetClientInformationResponse.InfosEntry
	1,  // 5: swupdate.Updater.GetAvailableUpdateBundles:input_type -> swupdate.GetAvailableUpdateBundlesRequest
	4,  // 6: swupdate.Updater.InstallUpdateBundle:input_type -> swupdate.InstallUpdateBundleRequest
	0,  // 7: swupdate.Updater.Reboot:input_type -> swupdate.Empty
	0,  // 8: swupdate.Updater.GetStatus:input_type -> swupdate.Empty
	0,  // 9: swupdate.Updater.Rollback:input_type -> swupdate.Empty
	0,  // 10: swupdate.Updater.GetClientInformation:input_type -> swupdate.Empty
	3,  // 11: swupdate.Updater.GetAvailableUpdateBundles:output_type -> swupdate.GetAvailableUpdateBundlesResponse
	5,  // 12: swupdate.Updater.InstallUpdateBundle:output_type -> swupdate.InstallUpdateBundleResponse
	0,  // 13: swupdate.Updater.Reboot:output_type -> swupdate.Empty
	6,  // 14: swupdate.Updater.GetStatus:output_type -> swupdate.GetStatusResponse
	7,  // 15: swupdate.Updater.Rollback:output_type -> swupdate.RollbackResponse
	8,  // 16: swupdate.Updater.GetClientInformation:output_type -> swupdate.GetClientInformationResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_swupdate_proto_init() }
func file_swupdate_proto_init() {
	if File_swupdate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_swupdate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swupdate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableUpdateBundlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swupdate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swupdate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableUpdateBundlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swupdate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallUpdateBundleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swupdate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallUpdateBundleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swupdate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swupdate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swupdate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_swupdate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_swupdate_proto_goTypes,
		DependencyIndexes: file_swupdate_proto_depIdxs,
		MessageInfos:      file_swupdate_proto_msgTypes,
	}.Build()
	File_swupdate_proto = out.File
	file_swupdate_proto_rawDesc = nil
	file_swupdate_proto_goTypes = nil
	file_swupdate_proto_depIdxs = nil
}
